// <auto-generated />
using System;
using BookingDB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BookingDB.Migrations
{
    [DbContext(typeof(BookingDbContext))]
    [Migration("20191215180826_AddTables")]
    partial class AddTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687");

            modelBuilder.Entity("BookingDB.DataTypes.BookedEntity", b =>
                {
                    b.Property<int>("BookingEntityId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("EntityName");

                    b.Property<int>("TimeShift");

                    b.HasKey("BookingEntityId");

                    b.ToTable("BookedEntity");
                });

            modelBuilder.Entity("BookingDB.DataTypes.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("BookedEntityBookingEntityId");

                    b.Property<string>("Comment");

                    b.Property<int?>("CustomerId");

                    b.Property<DateTime>("DateFrom");

                    b.Property<DateTime>("DateTo");

                    b.HasKey("BookingId");

                    b.HasIndex("BookedEntityBookingEntityId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("BookingDB.DataTypes.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.HasKey("CustomerId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("BookingDB.DataTypes.Booking", b =>
                {
                    b.HasOne("BookingDB.DataTypes.BookedEntity", "BookedEntity")
                        .WithMany()
                        .HasForeignKey("BookedEntityBookingEntityId");

                    b.HasOne("BookingDB.DataTypes.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");
                });
#pragma warning restore 612, 618
        }
    }
}
