// <auto-generated />
using System;
using BookingDB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;

namespace BookingDB.Migrations
{
    [DbContext(typeof(BookingDbContext))]
    [Migration("20200113201249_BaseEdit")]
    partial class BaseEdit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687");

            modelBuilder.Entity("BookingDB.Models.BookedEntity", b =>
                {
                    b.Property<int>("BookingEntityId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("EntityName");

                    b.Property<int>("TimeShift");

                    b.HasKey("BookingEntityId");

                    b.ToTable("BookedEntity");
                });

            modelBuilder.Entity("BookingDB.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("BookedEntityBookingEntityId");

                    b.Property<string>("Comment")
                        .HasMaxLength(5000);

                    b.Property<int?>("CustomerId");

                    b.Property<DateTime>("DateFrom")
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTime>("DateTo");

                    b.HasKey("BookingId");

                    b.HasIndex("BookedEntityBookingEntityId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("BookingDB.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<string>("Phone");

                    b.HasKey("CustomerId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("BookingDB.Models.Booking", b =>
                {
                    b.HasOne("BookingDB.Models.BookedEntity", "BookedEntity")
                        .WithMany("Bookings")
                        .HasForeignKey("BookedEntityBookingEntityId");

                    b.HasOne("BookingDB.Models.Customer", "Customer")
                        .WithMany("Bookings")
                        .HasForeignKey("CustomerId");
                });
#pragma warning restore 612, 618
        }
    }
}
